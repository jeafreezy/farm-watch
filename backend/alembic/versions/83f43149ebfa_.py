"""empty message

Revision ID: 83f43149ebfa
Revises: 
Create Date: 2022-10-02 16:54:45.109366

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = "83f43149ebfa"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column(
            "profile_picture", sqlalchemy_utils.types.url.URLType(), nullable=True
        ),
        sa.Column(
            "email", sqlalchemy_utils.types.email.EmailType(length=255), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=True)
    op.create_table(
        "fields",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("field_name", sa.String(length=50), nullable=False),
        sa.Column("centroid", sa.String(length=10), nullable=False),
        sa.Column("area", sa.FLOAT(), nullable=False),
        sa.Column("bbox", sa.ARRAY(sa.FLOAT()), nullable=False),
        sa.Column("notes", sa.String(length=3000), nullable=True),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(
                geometry_type="POLYGON",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id", "user_id"),
    )
    # op.create_index(
    #     "idx_fields_geom", "fields", ["geom"], unique=False, postgresql_using="gist"
    # )
    op.create_index(op.f("ix_fields_id"), "fields", ["id"], unique=True)
    op.create_index(op.f("ix_fields_user_id"), "fields", ["user_id"], unique=False)
    # op.drop_table("spatial_ref_sys")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table(
    #     "spatial_ref_sys",
    #     sa.Column("srid", sa.INTEGER(), autoincrement=False, nullable=False),
    #     sa.Column(
    #         "auth_name", sa.VARCHAR(length=256), autoincrement=False, nullable=True
    #     ),
    #     sa.Column("auth_srid", sa.INTEGER(), autoincrement=False, nullable=True),
    #     sa.Column(
    #         "srtext", sa.VARCHAR(length=2048), autoincrement=False, nullable=True
    #     ),
    #     sa.Column(
    #         "proj4text", sa.VARCHAR(length=2048), autoincrement=False, nullable=True
    #     ),
    #     sa.CheckConstraint(
    #         "(srid > 0) AND (srid <= 998999)", name="spatial_ref_sys_srid_check"
    #     ),
    #     sa.PrimaryKeyConstraint("srid", name="spatial_ref_sys_pkey"),
    # )
    op.drop_index(op.f("ix_fields_user_id"), table_name="fields")
    op.drop_index(op.f("ix_fields_id"), table_name="fields")
    op.drop_index("idx_fields_geom", table_name="fields", postgresql_using="gist")
    op.drop_table("fields")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
